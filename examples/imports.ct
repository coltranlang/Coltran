# When importing a module, Alden first looks for a file with the same name as the module in the current directory.
# If it doesn't find it, it checks if the module is a built-in module. If it is, it imports the module.
# else it raises an ImportError.


# The current directory is added to the path of the module, this essentially means you don't have to type the full path of the module, like so:
# current_directory = functions and module = add, so to import add, you can just type:
# import add from functions, as opposed to import add from functions.add, which would require you to type functions.add.

# A directory is a package if it contains an @__init.ald file.

# import style 1
import math # import math module
print(typeof(math)) # prints module

# import style 2
import math, file # import multiple modules
print(math, file) # prints <Module 'math', [built-in]> and <Module 'file', [built-in]> respectively

# import style 3
import math as m # import math module with alias m
print(m) # prints <Module 'math', [built-in]>
print(m.sqrt(25)) # prints 5

# import style 4
import @add from tests.functions # import @add function from tests package in functions.ald file
print(@add(2, 3)) # prints 5


# import style 5
import @add, @sub from tests.functions # import @add and @sub functions from tests package in functions.ald file
print(@add(2, 3)) # prints 5
print(@sub(2, 3)) # prints -1


# import style 6
import @add as a from tests.functions # import @add function from tests package in functions.ald file
print(a(2, 3)) # prints 5


# import style 7
from math import sqrt # import only sqrt function from math module
print(sqrt(25)) # prints 5


# Individually objects from a module can be imported using the following syntax:

# import style 8
from math import sqrt as square_root # import sqrt function from math module with alias square_root
print(square_root(25)) # prints 5



# import style 9
from math import * # import all everything from math module
print(sqrt(25)) # prints 5




# import style 10
from tests.functions import @add # import @add function from tests package in functions.ald file with specifying the directory
print(@add(2, 3)) # prints 5



# import style 11
from functions import @add as add # import @add function from tests package in functions.ald file with alias add without specifying directory
print(add(2, 3)) # prints 5


# import style 12
from tests.functions import @add, @sub # import @add and @sub functions from tests package in functions.ald file
print(@add(2, 3)) # prints 5

# import style 13
from functions import * # import everything from tests package in functions.ald file
print(@mul(2, 3)) # prints 6

# import style 14
from .driver_package import Location # import Location class from driver_package package in current directory
Location()










# import math # import math module
# print(math)
# import math, file # import math module and file module
# print(math, file)
# import math as m # import math module as m
# print(m)
# import rad from math # import rad from math module
# print(rad)
# import @add, @sub from functions # import @add, @sub functions from functions module
# print(@add(1,2), @sub(1,2))
# import @add as ADD from functions # import @add as ADD from functions module
# print(ADD(1,2))
# from math import pow, abs, pi  # import pow, abs, pi functions from math module
# print(pow(2, 3), abs(-2), pi) 
# import Customer from tests.customer # import Customer class from tests.customer module
# print(Customer)
# import Customer as C from tests.customer # import Customer class as C from tests.customer module
# print(C)
# from math import add # import add function from math module
# print(add(1,2))
# from math import sqrt as square_root # import sqrt function as square_root from math module
# print(square_root(25))
# from math import * # import everything from math module
# print(sqrt(16))
# from tests.customer import Customer # import Customer class from tests.customer module
# print(Customer)
# from customer import Customer as C # import Customer class as C from customer module
# print(C)
# from customer import Customer, Purchase # import Customer class and Purchase class from customer module
# print(Customer)
# from customer import * # import everything from customer module
# print(names)
# import @add from tests.functions # import @add function from tests.functions module
# print(@add(1,2)) 

# import functions as f # import functions module as f
# print(f.@add(1,2))
# from functions import @add as add # import @add function as add from functions module
# print(add(1,2))