def @Factorial(n)
    if n == 0 :
        return 1
    else:
        return n * @Factorial(n - 1)
    end
end


println(@Factorial(5))


def @UpdateUser(user)
 println("Your id is " + str(user.id))
 println(user.username)
end

object User
    id: 1
    username: "kenny001"
end

@UpdateUser(User)


def @HowmanyCoffeeDrank(coffeeDrank)
    for i = 0 to coffeeDrank :
        println("Coffee drank: " + str(i))
        # if last coffee drank,  print out the message
        if i == coffeeDrank - 1 : 
            println("You drank all the coffee you need!")
        end
    end
end

@HowmanyCoffeeDrank(5)

# fibonacci series
def @FibonacciSeries()
    let prompt = "Fibonacci series: "
    let nterm = inputInt("Enter a number: ")
    let count = 0
    let n1 = 0
    let n2 = 1

    if nterm == 1 :
        println(n1)
    else:
        println(n1)
        println(n2)
        while count < nterm - 2 :
            let n3 = n1 + n2
            println(n3)
            let n1 = n2
            let n2 = n3
            let count = count + 1
        end
    end
end


#@FibonacciSeries()


# first class function
def @Animal(getAnimal)
    let animal = getAnimal()
    println("The animal is " + animal)
end

def @getAnimal()
    return "Lion"
end

@Animal(@getAnimal)

final sayHello = def () -> def (name) -> println(f"Hello %{name}!")

# We can call the sayHello function using the following syntax:
sayHello()("David") # double parentheses or assign to a variable : let hello = sayHello() # call the function hello()

# closure 
def @main()
    let name = "Test"
    def @displayName()
        println(f"Hello from %{name}!")
    end
    return @displayName()
end
@main()



def @countZeros(N)
    let n = 32
    let y = N >> 16
    if y != 0 :
       let  n = n - 16
       let N = y
    end
    let y = N >> 8
    if y != 0 :
        let n = n - 8
        let N = y
    end
    let y = N >> 4
    if y != 0 :
        let n = n - 4
        let N = y
    end
    let y = N >> 2
    if y != 0 :
        let n = n - 2
        let N = y
    end
    let y = N >> 1
    if y != 0 :
        return n - 2
    end
    return n - N
end
println(@countZeros(16))

def @test_func(func)
    func.__@call__("Kenny")
    func("Dennis")
    func.__@call__("Bob")
    func.__@call__()
end

def @say_hello(name="John")
    print(f"%{name} says hello")
end


@test_func(@say_hello)